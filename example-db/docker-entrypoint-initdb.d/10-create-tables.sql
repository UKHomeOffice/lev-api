\set app_user `echo "${APP_USER}"`

CREATE TABLE inner_birth_table (
  BIRTH_REC_ID NUMERIC(10,0) NOT NULL PRIMARY KEY,
  REGIS_ID NUMERIC(9,0),
  REGIS_DISTRICT_NAME VARCHAR(128),
  REGIS_SUB_DISTRICT_NAME VARCHAR(128),
  REGIS_ADMIN_AREA_NAME VARCHAR(128),
  DOB VARCHAR(10),
  DOB_NUMERIC NUMERIC(8,0),
  BIRTHPLACE_ADDRESS VARCHAR(128),
  TIME_OF_BIRTH VARCHAR(8),
  CHILD_FORENAME1 VARCHAR(128),
  CHILD_FORENAME1_SEARCH VARCHAR(128),
  CHILD_FORENAME2 VARCHAR(128),
  CHILD_FORENAME2_SEARCH VARCHAR(128),
  CHILD_FORENAME3 VARCHAR(128),
  CHILD_FORENAME3_SEARCH VARCHAR(128),
  CHILD_FORENAME4 VARCHAR(128),
  CHILD_FORENAME4_SEARCH VARCHAR(128),
  CHILD_FORENAME1_U VARCHAR(128),
  CHILD_FORENAME1_U_SEARCH VARCHAR(128),
  CHILD_FORENAME2_U VARCHAR(128),
  CHILD_FORENAME2_U_SEARCH VARCHAR(128),
  CHILD_FORENAME3_U VARCHAR(128),
  CHILD_FORENAME3_U_SEARCH VARCHAR(128),
  CHILD_FORENAME4_U VARCHAR(128),
  CHILD_FORENAME4_U_SEARCH VARCHAR(128),
  CHILD_SURNAME VARCHAR(128),
  CHILD_SURNAME_SEARCH VARCHAR(128),
  CHILD_SEX VARCHAR(64),
  FATHER_FORENAME1 VARCHAR(128),
  FATHER_FORENAME2 VARCHAR(128),
  FATHER_FORENAME3 VARCHAR(128),
  FATHER_FORENAME4 VARCHAR(128),
  FATHER_SURNAME VARCHAR(128),
  FATHER_BIRTHPLACE VARCHAR(128),
  FATHER_OCCUPATION VARCHAR(128),
  MOTHER_FORENAME1 VARCHAR(128),
  MOTHER_FORENAME2 VARCHAR(128),
  MOTHER_FORENAME3 VARCHAR(128),
  MOTHER_FORENAME4 VARCHAR(128),
  MOTHER_SURNAME VARCHAR(128),
  MOTHER_BIRTHPLACE VARCHAR(128),
  MOTHER_OCCUPATION VARCHAR(128),
  MOTHER_SURNAME_MAIDEN VARCHAR(128),
  MOTHER_SURNAME_MARRIAGE VARCHAR(128),
  MOTHER_ADDRESS VARCHAR(128),
  INFORMANT1_SAME_AS_MOTHER VARCHAR(1),
  INFORMANT1_FORENAMES VARCHAR(128),
  INFORMANT1_SURNAME VARCHAR(128),
  INFORMANT2_SAME_AS_INFORMANT1 VARCHAR(1),
  INFORMANT_PRINT_NAME VARCHAR(128),
  INFORMANT_QUALIFICATION_TEXT VARCHAR(128),
  INFORMANT1_ADDRESS VARCHAR(128),
  INFORMANT2_ADDRESS VARCHAR(128),
  INFORMANT_SIGNATURE VARCHAR(256),
  REGIS_DATE VARCHAR(10),
  REGISTRAR_SIGNATURE VARCHAR(128),
  CANCELLED_TYPE VARCHAR(1) DEFAULT '0'::VARCHAR,
  FORMAL_CORRECTION_TYPE NUMERIC(2,0),
  FL_CANCELLED VARCHAR(1),
  IND_BLOCKED_REGISTRATION VARCHAR(1),
  IND_CAUTION_MARK VARCHAR(1),
  IND_FICTITIOUS_BIRTH VARCHAR(1),
  IND_UPDATE_TYPE NUMERIC(2,0),
  MARGINAL_NOT_REASON NUMERIC(1,0),
  RE_REGIS_TYPE VARCHAR(64),
  REREG_PREVIOUS_REGIS_ID NUMERIC(9,0),
  REREG_PREV_REGIS_DATE VARCHAR(10)
);

CREATE VIEW lev AS
SELECT
  BIRTH_REC_ID,
  REGIS_ID,
  REGIS_DISTRICT_NAME,
  REGIS_SUB_DISTRICT_NAME,
  REGIS_ADMIN_AREA_NAME,
  DOB,
  DOB_NUMERIC,
  BIRTHPLACE_ADDRESS,
  CHILD_FORENAME1,
  CHILD_FORENAME1_SEARCH,
  CHILD_FORENAME2,
  CHILD_FORENAME2_SEARCH,
  CHILD_FORENAME3,
  CHILD_FORENAME3_SEARCH,
  CHILD_FORENAME4,
  CHILD_FORENAME4_SEARCH,
  CHILD_FORENAME1_U,
  CHILD_FORENAME1_U_SEARCH,
  CHILD_FORENAME2_U,
  CHILD_FORENAME2_U_SEARCH,
  CHILD_FORENAME3_U,
  CHILD_FORENAME3_U_SEARCH,
  CHILD_FORENAME4_U,
  CHILD_FORENAME4_U_SEARCH,
  (CASE WHEN (CHILD_FORENAME1_U IS NULL) THEN CHILD_FORENAME1 ELSE CHILD_FORENAME1_U END) AS CHILD_FORENAME1_C,
  (CASE WHEN (CHILD_FORENAME1_U IS NULL) THEN CHILD_FORENAME2 ELSE CHILD_FORENAME2_U END) AS CHILD_FORENAME2_C,
  (CASE WHEN (CHILD_FORENAME1_U IS NULL) THEN CHILD_FORENAME3 ELSE CHILD_FORENAME3_U END) AS CHILD_FORENAME3_C,
  (CASE WHEN (CHILD_FORENAME1_U IS NULL) THEN CHILD_FORENAME4 ELSE CHILD_FORENAME4_U END) AS CHILD_FORENAME4_C,
  (CASE WHEN (CHILD_FORENAME1_U IS NULL) THEN NULL ELSE CHILD_FORENAME1 END) AS CHILD_FORENAME1_O,
  (CASE WHEN (CHILD_FORENAME1_U IS NULL) THEN NULL ELSE CHILD_FORENAME2 END) AS CHILD_FORENAME2_O,
  (CASE WHEN (CHILD_FORENAME1_U IS NULL) THEN NULL ELSE CHILD_FORENAME3 END) AS CHILD_FORENAME3_O,
  (CASE WHEN (CHILD_FORENAME1_U IS NULL) THEN NULL ELSE CHILD_FORENAME4 END) AS CHILD_FORENAME4_O,
  CHILD_SURNAME,
  CHILD_SURNAME_SEARCH,
  CHILD_SEX,
  FATHER_FORENAME1,
  FATHER_FORENAME2,
  FATHER_FORENAME3,
  FATHER_FORENAME4,
  FATHER_SURNAME,
  FATHER_BIRTHPLACE,
  FATHER_OCCUPATION,
  MOTHER_FORENAME1,
  MOTHER_FORENAME2,
  MOTHER_FORENAME3,
  MOTHER_FORENAME4,
  MOTHER_SURNAME,
  MOTHER_BIRTHPLACE,
  MOTHER_OCCUPATION,
  MOTHER_SURNAME_MAIDEN,
  MOTHER_SURNAME_MARRIAGE,
  MOTHER_ADDRESS,
  INFORMANT1_SAME_AS_MOTHER,
  INFORMANT1_FORENAMES,
  INFORMANT1_SURNAME,
  INFORMANT2_SAME_AS_INFORMANT1,
  INFORMANT_PRINT_NAME,
  INFORMANT_QUALIFICATION_TEXT,
  INFORMANT1_ADDRESS,
  INFORMANT2_ADDRESS,
  INFORMANT_SIGNATURE,
  REGIS_DATE,
  REGISTRAR_SIGNATURE,
  CANCELLED_TYPE,
  FORMAL_CORRECTION_TYPE,
  FL_CANCELLED,
  IND_BLOCKED_REGISTRATION,
  IND_CAUTION_MARK,
  IND_FICTITIOUS_BIRTH,
  IND_UPDATE_TYPE,
  MARGINAL_NOT_REASON,
  RE_REGIS_TYPE,
  REREG_PREVIOUS_REGIS_ID,
  REREG_PREV_REGIS_DATE
FROM inner_birth_table;

GRANT SELECT ON TABLE lev TO :"app_user";

CREATE TABLE birth_registration_v1 (
  id INTEGER PRIMARY KEY,
  data JSON NOT NULL,
  forenames TEXT NOT NULL,
  surname TEXT NOT NULL,
  date_of_birth DATE NOT NULL
);

CREATE TABLE death_registration_v1 (
  id INTEGER PRIMARY KEY,
  data JSON,
  forenames TEXT NOT NULL,
  surname TEXT NOT NULL,
  date_of_birth DATE,
  date_of_death DATE NOT NULL
);

CREATE TABLE marriage_registration_v1 (
  id INTEGER PRIMARY KEY,
  data JSON NOT NULL,
  bride_forenames TEXT NOT NULL,
  bride_surname TEXT NOT NULL,
  bride_date_of_birth DATE,
  groom_forenames TEXT NOT NULL,
  groom_surname TEXT NOT NULL,
  groom_date_of_birth DATE
);

GRANT SELECT ON TABLE birth_registration_v1 TO :"app_user";
GRANT SELECT ON TABLE death_registration_v1 TO :"app_user";
GRANT SELECT ON TABLE marriage_registration_v1 TO :"app_user";
