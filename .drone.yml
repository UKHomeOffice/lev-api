matrix:
  NAME:
    - ukhomeofficedigital/lev-api
  MAJOR:
    - 0
  MINOR:
    - 0
  PATCH:
    - 9
  DOCKER_USERNAME:
    - ukhomeofficedigital+lev_api
  DOCKER_REPO:
    - quay.io
pipeline:
  test_pr:
    image: quay.io/ukhomeofficedigital/lev-ci
    environment:
      - DOCKER_HOST=tcp://172.17.0.1:2375
    commands:
      - make 'compose_project_name=lev-api-${DRONE_BUILD_NUMBER}' test
    when:
      event: pull_request
  test_push:
    image: quay.io/ukhomeofficedigital/lev-ci
    environment:
      - DOCKER_HOST=tcp://172.17.0.1:2375
    commands:
      - set -o pipefail
      - make 'compose_project_name=lev-api-${DRONE_BUILD_NUMBER}' test | tee 'test.log'
    when:
      event: push
      branch: master
  docker-build-and-push:
    image: ukhomeoffice/drone-docker
    secrets: [ docker_password ]
    username: '${DOCKER_USERNAME}'
    repo: '${DOCKER_REPO}/${NAME}'
    registry: '${DOCKER_REPO}'
    tags:
      - '${MAJOR}.${MINOR}.${PATCH}-${DRONE_BUILD_NUMBER}-${DRONE_COMMIT:0:10}'
      - '${MAJOR}.${MINOR}.${PATCH}'
      - '${MAJOR}.${MINOR}'
      - '${MAJOR}'
      - 'latest'
    when:
      event: push
      branch: master
  deploy_image:
    image: quay.io/ukhomeofficedigital/lev-ci
    secrets:
      - KUBE_SERVER
      - KUBE_NAMESPACE
      - KUBE_TOKEN
      - KUBE_DEPLOYMENT
      - KUBE_CONTAINER
      - USERNAME
      - PASSWORD
      - CLIENT_ID
      - CLIENT_SECRET
      - OIDC_URL
      - TEST_URL
    environment:
      - DOCKER_HOST=tcp://172.17.0.1:2375
      - TAG=${MAJOR}.${MINOR}.${PATCH}-${DRONE_BUILD_NUMBER}-${DRONE_COMMIT:0:10}
    commands:
      - kubectl="kubectl --insecure-skip-tls-verify --server=$${KUBE_SERVER} --namespace=$${KUBE_NAMESPACE} --token=$${KUBE_TOKEN}"
      - $${kubectl} scale deployment "$${KUBE_DEPLOYMENT}" --replicas 2
      - $${kubectl} set image "deployment/$${KUBE_DEPLOYMENT}" "$${KUBE_CONTAINER}=${DOCKER_REPO}/${NAME}:$${TAG}"
      - $${kubectl} rollout status "deployment/$${KUBE_DEPLOYMENT}"
      - $${kubectl} scale deployment "$${KUBE_DEPLOYMENT}" --replicas 1
      - set -o pipefail
      - docker run --env "USERNAME=$${USERNAME}" --env "PASSWORD=$${PASSWORD}" --env "CLIENT_ID=$${CLIENT_ID}" --env "CLIENT_SECRET=$${CLIENT_SECRET}" --env "OIDC_URL=$${OIDC_URL}" --env "TEST_URL=$${TEST_URL}" quay.io/ukhomeofficedigital/lev-api-test:v${MAJOR}.${MINOR} | tee 'e2e.log'
      - $${kubectl} annotate --overwrite deployment "$${KUBE_DEPLOYMENT}" lev-api-test-log="`cat test.log e2e.log`"
    when:
      branch: master
      event: push
  deploy_docs:
    image: quay.io/ukhomeofficedigital/lev-ci
    secrets:
      - KUBE_SERVER
      - KUBE_NAMESPACE
      - KUBE_TOKEN
      - KUBE_DEPLOYMENT_DOCS
      - KUBE_CONTAINER_DOCS
    environment:
      - DOCKER_HOST=tcp://172.17.0.1:2375
      - IMAGE=quay.io/ukhomeofficedigital/lev-api-docs:${MAJOR}.${MINOR}
    commands:
      - kubectl="kubectl --insecure-skip-tls-verify --server=$${KUBE_SERVER} --namespace=$${KUBE_NAMESPACE} --token=$${KUBE_TOKEN}"
      - $${kubectl} set image "deployment/$${KUBE_DEPLOYMENT_DOCS}" "$${KUBE_CONTAINER_DOCS}=$${IMAGE}"
      - $${kubectl} rollout status "deployment/$${KUBE_DEPLOYMENT_DOCS}"
    when:
      branch: master
      event: push
  promote_to_uat:
    image: quay.io/ukhomeofficedigital/drone-trigger:latest
    secrets: [ drone_token ]
    drone_server: https://drone-gitlab.acp.homeoffice.gov.uk
    repo: lev/levops
    branch: master
    event: push
    deploy_to: uat
    when:
      branch: master
      event: push
      status: success
  notify_slack_success:
    image: plugins/slack:1.0
    secrets: [ slack_webhook ]
    channel: general
    username: Drone
    template: >
      *Deployed {{repo.name}} to Dev-UK* - <{{build.link}}|#{{build.number}}>
    when:
      branch: master
      event: push
      status: success
  notify_slack_failure:
    image: plugins/slack
    secrets: [ slack_webhook ]
    channel: alerts
    username: Drone
    template: >
      *Failed to deploy {{repo.name}} to Dev-UK*

      Author: {{build.author}}

      Duration: {{since job.started}}
      Job: <{{build.link}}|#{{build.number}}>

      Commit: {{build.commit}}
    when:
      branch: master
      event: push
      status: failure
